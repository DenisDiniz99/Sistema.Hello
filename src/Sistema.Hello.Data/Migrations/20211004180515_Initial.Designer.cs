// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sistema.Hello.Data.Context;

namespace Sistema.Hello.Data.Migrations
{
    [DbContext(typeof(HelloContext))]
    [Migration("20211004180515_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Sistema.Hello.Business.Entities.AssuntoAtendimento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TituloAssunto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Assuntos");
                });

            modelBuilder.Entity("Sistema.Hello.Business.Entities.Atendimento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AssuntoAtendimentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AssuntoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CidadaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ColaboradorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("HistoricoAtendimentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HistoricoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Observacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusAtendimento")
                        .HasColumnType("int");

                    b.Property<int>("TipoAtendimento")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssuntoAtendimentoId");

                    b.HasIndex("CidadaoId");

                    b.HasIndex("ColaboradorId");

                    b.HasIndex("HistoricoAtendimentoId");

                    b.ToTable("Atendimentos");
                });

            modelBuilder.Entity("Sistema.Hello.Business.Entities.Cargo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SetorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SrtorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TituloCargo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("SetorId");

                    b.ToTable("Cargos");
                });

            modelBuilder.Entity("Sistema.Hello.Business.Entities.Cidadao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<DateTime>("DataCad")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataNasc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Rg")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("TelefoneFixo")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Cidadaos");
                });

            modelBuilder.Entity("Sistema.Hello.Business.Entities.Colaborador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CargoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCad")
                        .HasColumnType("datetime2");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CargoId");

                    b.ToTable("Calaboradores");
                });

            modelBuilder.Entity("Sistema.Hello.Business.Entities.HistoricoAtendimento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Historicos");
                });

            modelBuilder.Entity("Sistema.Hello.Business.Entities.Setor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TituloSetor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Setores");
                });

            modelBuilder.Entity("Sistema.Hello.Business.Entities.Atendimento", b =>
                {
                    b.HasOne("Sistema.Hello.Business.Entities.AssuntoAtendimento", "AssuntoAtendimento")
                        .WithMany("Atendimentos")
                        .HasForeignKey("AssuntoAtendimentoId");

                    b.HasOne("Sistema.Hello.Business.Entities.Cidadao", "Cidadao")
                        .WithMany("Atendimentos")
                        .HasForeignKey("CidadaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sistema.Hello.Business.Entities.Colaborador", "Colaborador")
                        .WithMany("Atendimentos")
                        .HasForeignKey("ColaboradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sistema.Hello.Business.Entities.HistoricoAtendimento", "HistoricoAtendimento")
                        .WithMany("Atendimentos")
                        .HasForeignKey("HistoricoAtendimentoId");

                    b.OwnsOne("Sistema.Hello.Business.ValuesObjects.Protocolo", "Protocolo", b1 =>
                        {
                            b1.Property<Guid>("AtendimentoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("NumProtocolo")
                                .HasColumnType("int");

                            b1.HasKey("AtendimentoId");

                            b1.ToTable("Atendimentos");

                            b1.WithOwner()
                                .HasForeignKey("AtendimentoId");
                        });

                    b.Navigation("AssuntoAtendimento");

                    b.Navigation("Cidadao");

                    b.Navigation("Colaborador");

                    b.Navigation("HistoricoAtendimento");

                    b.Navigation("Protocolo");
                });

            modelBuilder.Entity("Sistema.Hello.Business.Entities.Cargo", b =>
                {
                    b.HasOne("Sistema.Hello.Business.Entities.Setor", "Setor")
                        .WithMany("Cargos")
                        .HasForeignKey("SetorId");

                    b.Navigation("Setor");
                });

            modelBuilder.Entity("Sistema.Hello.Business.Entities.Cidadao", b =>
                {
                    b.OwnsOne("Sistema.Hello.Business.ValuesObjects.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<Guid>("CidadaoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Bairro")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Cep")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Cidade")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Estado")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Rua")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("CidadaoId");

                            b1.ToTable("Cidadaos");

                            b1.WithOwner()
                                .HasForeignKey("CidadaoId");
                        });

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("Sistema.Hello.Business.Entities.Colaborador", b =>
                {
                    b.HasOne("Sistema.Hello.Business.Entities.Cargo", "Cargo")
                        .WithMany("Colaboradores")
                        .HasForeignKey("CargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cargo");
                });

            modelBuilder.Entity("Sistema.Hello.Business.Entities.Setor", b =>
                {
                    b.OwnsOne("Sistema.Hello.Business.ValuesObjects.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<Guid>("SetorId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Bairro")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Cep")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Cidade")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Estado")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Rua")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("SetorId");

                            b1.ToTable("Setores");

                            b1.WithOwner()
                                .HasForeignKey("SetorId");
                        });

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("Sistema.Hello.Business.Entities.AssuntoAtendimento", b =>
                {
                    b.Navigation("Atendimentos");
                });

            modelBuilder.Entity("Sistema.Hello.Business.Entities.Cargo", b =>
                {
                    b.Navigation("Colaboradores");
                });

            modelBuilder.Entity("Sistema.Hello.Business.Entities.Cidadao", b =>
                {
                    b.Navigation("Atendimentos");
                });

            modelBuilder.Entity("Sistema.Hello.Business.Entities.Colaborador", b =>
                {
                    b.Navigation("Atendimentos");
                });

            modelBuilder.Entity("Sistema.Hello.Business.Entities.HistoricoAtendimento", b =>
                {
                    b.Navigation("Atendimentos");
                });

            modelBuilder.Entity("Sistema.Hello.Business.Entities.Setor", b =>
                {
                    b.Navigation("Cargos");
                });
#pragma warning restore 612, 618
        }
    }
}
